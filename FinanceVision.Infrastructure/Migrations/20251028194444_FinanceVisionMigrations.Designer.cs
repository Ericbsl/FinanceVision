// <auto-generated />
using System;
using FinanceVision.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceVision.Infrastructure.Migrations
{
    [DbContext(typeof(FinanceVisionDbContext))]
    [Migration("20251028194444_FinanceVisionMigrations")]
    partial class FinanceVisionMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceVision.Domain.Entities.Banco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjCpfTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriado")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titular")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.CategoriaFinanceira", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaFinanceira");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.FormaPagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PermiteParcelamento")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.Pagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriado")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdBanco")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdCategoria")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdFormaPgto")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdFormaPgto");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.PagamentoParcela", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("CodBarra")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("IdPagamento")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Juros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Multa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPagamento");

                    b.ToTable("PagamentoParcela");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("FinanceVision.Domain.Entities.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("IdBanco");

                    b.HasOne("FinanceVision.Domain.Entities.CategoriaFinanceira", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria");

                    b.HasOne("FinanceVision.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceVision.Domain.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("IdFormaPgto");

                    b.Navigation("Banco");

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.PagamentoParcela", b =>
                {
                    b.HasOne("FinanceVision.Domain.Entities.Pagamento", "Pagamento")
                        .WithMany("Parcelas")
                        .HasForeignKey("IdPagamento");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("FinanceVision.Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
